//*
// Licensed to Crawler-Commons under one or more
// contributor license agreements.  See the NOTICE file distributed with
// this work for additional information regarding copyright ownership.
// DigitalPebble licenses this file to You under the Apache License, Version 2.0
// (the "License"); you may not use this file except in compliance with
// the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.2
// source: urlfrontier.proto

package urlfrontier

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AckMessage_Status int32

const (
	AckMessage_OK      AckMessage_Status = 0
	AckMessage_SKIPPED AckMessage_Status = 1
	AckMessage_FAIL    AckMessage_Status = 2
)

// Enum value maps for AckMessage_Status.
var (
	AckMessage_Status_name = map[int32]string{
		0: "OK",
		1: "SKIPPED",
		2: "FAIL",
	}
	AckMessage_Status_value = map[string]int32{
		"OK":      0,
		"SKIPPED": 1,
		"FAIL":    2,
	}
)

func (x AckMessage_Status) Enum() *AckMessage_Status {
	p := new(AckMessage_Status)
	*p = x
	return p
}

func (x AckMessage_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AckMessage_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_urlfrontier_proto_enumTypes[0].Descriptor()
}

func (AckMessage_Status) Type() protoreflect.EnumType {
	return &file_urlfrontier_proto_enumTypes[0]
}

func (x AckMessage_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AckMessage_Status.Descriptor instead.
func (AckMessage_Status) EnumDescriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{16, 0}
}

type LogLevelParams_Level int32

const (
	LogLevelParams_TRACE LogLevelParams_Level = 0
	LogLevelParams_DEBUG LogLevelParams_Level = 1
	LogLevelParams_INFO  LogLevelParams_Level = 2
	LogLevelParams_WARN  LogLevelParams_Level = 3
	LogLevelParams_ERROR LogLevelParams_Level = 4
)

// Enum value maps for LogLevelParams_Level.
var (
	LogLevelParams_Level_name = map[int32]string{
		0: "TRACE",
		1: "DEBUG",
		2: "INFO",
		3: "WARN",
		4: "ERROR",
	}
	LogLevelParams_Level_value = map[string]int32{
		"TRACE": 0,
		"DEBUG": 1,
		"INFO":  2,
		"WARN":  3,
		"ERROR": 4,
	}
)

func (x LogLevelParams_Level) Enum() *LogLevelParams_Level {
	p := new(LogLevelParams_Level)
	*p = x
	return p
}

func (x LogLevelParams_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevelParams_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_urlfrontier_proto_enumTypes[1].Descriptor()
}

func (LogLevelParams_Level) Type() protoreflect.EnumType {
	return &file_urlfrontier_proto_enumTypes[1]
}

func (x LogLevelParams_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevelParams_Level.Descriptor instead.
func (LogLevelParams_Level) EnumDescriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{20, 0}
}

//*
// Message returned by the GetStats method
type Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// number of active URLs in queues
	Size uint64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// number of URLs currently in flight
	InProcess uint32 `protobuf:"varint,2,opt,name=inProcess,proto3" json:"inProcess,omitempty"`
	// custom counts
	Counts map[string]uint64 `protobuf:"bytes,3,rep,name=counts,proto3" json:"counts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// number of active queues in the frontier
	NumberOfQueues uint64 `protobuf:"varint,4,opt,name=numberOfQueues,proto3" json:"numberOfQueues,omitempty"`
	// crawl ID
	CrawlID string `protobuf:"bytes,5,opt,name=crawlID,proto3" json:"crawlID,omitempty"`
}

func (x *Stats) Reset() {
	*x = Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{0}
}

func (x *Stats) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Stats) GetInProcess() uint32 {
	if x != nil {
		return x.InProcess
	}
	return 0
}

func (x *Stats) GetCounts() map[string]uint64 {
	if x != nil {
		return x.Counts
	}
	return nil
}

func (x *Stats) GetNumberOfQueues() uint64 {
	if x != nil {
		return x.NumberOfQueues
	}
	return 0
}

func (x *Stats) GetCrawlID() string {
	if x != nil {
		return x.CrawlID
	}
	return ""
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// position of the first result in the list; defaults to 0
	Start uint32 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	// max number of values; defaults to 100
	Size uint32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// include inactive queues; defaults to false
	IncludeInactive bool `protobuf:"varint,3,opt,name=include_inactive,json=includeInactive,proto3" json:"include_inactive,omitempty"`
	// crawl ID
	CrawlID string `protobuf:"bytes,4,opt,name=crawlID,proto3" json:"crawlID,omitempty"`
	// only for the current local instance
	Local bool `protobuf:"varint,5,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{1}
}

func (x *Pagination) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Pagination) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Pagination) GetIncludeInactive() bool {
	if x != nil {
		return x.IncludeInactive
	}
	return false
}

func (x *Pagination) GetCrawlID() string {
	if x != nil {
		return x.CrawlID
	}
	return ""
}

func (x *Pagination) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

type DeleteCrawlMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Local bool   `protobuf:"varint,2,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *DeleteCrawlMessage) Reset() {
	*x = DeleteCrawlMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCrawlMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCrawlMessage) ProtoMessage() {}

func (x *DeleteCrawlMessage) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCrawlMessage.ProtoReflect.Descriptor instead.
func (*DeleteCrawlMessage) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteCrawlMessage) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DeleteCrawlMessage) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{3}
}

type Local struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Local bool `protobuf:"varint,1,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *Local) Reset() {
	*x = Local{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Local) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Local) ProtoMessage() {}

func (x *Local) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Local.ProtoReflect.Descriptor instead.
func (*Local) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{4}
}

func (x *Local) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

type Active struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State bool `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	Local bool `protobuf:"varint,2,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *Active) Reset() {
	*x = Active{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Active) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Active) ProtoMessage() {}

func (x *Active) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Active.ProtoReflect.Descriptor instead.
func (*Active) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{5}
}

func (x *Active) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

func (x *Active) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

type Boolean struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State bool `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Boolean) Reset() {
	*x = Boolean{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Boolean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Boolean) ProtoMessage() {}

func (x *Boolean) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Boolean.ProtoReflect.Descriptor instead.
func (*Boolean) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{6}
}

func (x *Boolean) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

type Long struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Long) Reset() {
	*x = Long{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Long) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Long) ProtoMessage() {}

func (x *Long) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Long.ProtoReflect.Descriptor instead.
func (*Long) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{7}
}

func (x *Long) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

//* Returned by ListQueues *
type QueueList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// total number of queues
	Total uint64 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	// position of the first result in the list
	Start uint32 `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	// number of values returned
	Size uint32 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	// crawl ID - empty string for default
	CrawlID string `protobuf:"bytes,5,opt,name=crawlID,proto3" json:"crawlID,omitempty"`
}

func (x *QueueList) Reset() {
	*x = QueueList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueList) ProtoMessage() {}

func (x *QueueList) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueList.ProtoReflect.Descriptor instead.
func (*QueueList) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{8}
}

func (x *QueueList) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *QueueList) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueueList) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *QueueList) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *QueueList) GetCrawlID() string {
	if x != nil {
		return x.CrawlID
	}
	return ""
}

type StringList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *StringList) Reset() {
	*x = StringList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringList) ProtoMessage() {}

func (x *StringList) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringList.ProtoReflect.Descriptor instead.
func (*StringList) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{9}
}

func (x *StringList) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type QueueWithinCrawlParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* ID for the queue *
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// crawl ID - empty string for default
	CrawlID string `protobuf:"bytes,2,opt,name=crawlID,proto3" json:"crawlID,omitempty"`
	// only for this instance
	Local bool `protobuf:"varint,3,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *QueueWithinCrawlParams) Reset() {
	*x = QueueWithinCrawlParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueWithinCrawlParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueWithinCrawlParams) ProtoMessage() {}

func (x *QueueWithinCrawlParams) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueWithinCrawlParams.ProtoReflect.Descriptor instead.
func (*QueueWithinCrawlParams) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{10}
}

func (x *QueueWithinCrawlParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *QueueWithinCrawlParams) GetCrawlID() string {
	if x != nil {
		return x.CrawlID
	}
	return ""
}

func (x *QueueWithinCrawlParams) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

//* Parameter message for SetDelay *
type QueueDelayParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* ID for the queue - an empty value sets the default for all the queues *
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	//  delay in seconds before a queue can provide new URLs
	DelayRequestable uint32 `protobuf:"varint,2,opt,name=delay_requestable,json=delayRequestable,proto3" json:"delay_requestable,omitempty"`
	// crawl ID - empty string for default
	CrawlID string `protobuf:"bytes,3,opt,name=crawlID,proto3" json:"crawlID,omitempty"`
	// only for this instance
	Local bool `protobuf:"varint,4,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *QueueDelayParams) Reset() {
	*x = QueueDelayParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueDelayParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueDelayParams) ProtoMessage() {}

func (x *QueueDelayParams) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueDelayParams.ProtoReflect.Descriptor instead.
func (*QueueDelayParams) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{11}
}

func (x *QueueDelayParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *QueueDelayParams) GetDelayRequestable() uint32 {
	if x != nil {
		return x.DelayRequestable
	}
	return 0
}

func (x *QueueDelayParams) GetCrawlID() string {
	if x != nil {
		return x.CrawlID
	}
	return ""
}

func (x *QueueDelayParams) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

//* Parameter message for BlockQueueUntil *
type BlockQueueParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* ID for the queue *
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	//* Expressed in seconds of UTC time since Unix epoch
	//1970-01-01T00:00:00Z. The default value of 0 will unblock the queue.
	Time uint64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	// crawl ID
	CrawlID string `protobuf:"bytes,3,opt,name=crawlID,proto3" json:"crawlID,omitempty"`
	// only for this instance
	Local bool `protobuf:"varint,4,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *BlockQueueParams) Reset() {
	*x = BlockQueueParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockQueueParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockQueueParams) ProtoMessage() {}

func (x *BlockQueueParams) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockQueueParams.ProtoReflect.Descriptor instead.
func (*BlockQueueParams) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{12}
}

func (x *BlockQueueParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *BlockQueueParams) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *BlockQueueParams) GetCrawlID() string {
	if x != nil {
		return x.CrawlID
	}
	return ""
}

func (x *BlockQueueParams) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

//* Parameter message for GetURLs *
type GetParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// maximum number of URLs per queue, the default value of 0 means no limit
	MaxUrlsPerQueue uint32 `protobuf:"varint,1,opt,name=max_urls_per_queue,json=maxUrlsPerQueue,proto3" json:"max_urls_per_queue,omitempty"`
	// maximum number of queues to get URLs from, the default value of 0 means no limit
	MaxQueues uint32 `protobuf:"varint,2,opt,name=max_queues,json=maxQueues,proto3" json:"max_queues,omitempty"`
	// queue id if restricting to a specific queue
	Key string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	//  delay in seconds before a URL can be unlocked and sent again for fetching
	DelayRequestable uint32 `protobuf:"varint,4,opt,name=delay_requestable,json=delayRequestable,proto3" json:"delay_requestable,omitempty"`
	// Types that are assignable to Item:
	//	*GetParams_AnyCrawlID
	//	*GetParams_CrawlID
	Item isGetParams_Item `protobuf_oneof:"item"`
}

func (x *GetParams) Reset() {
	*x = GetParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParams) ProtoMessage() {}

func (x *GetParams) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParams.ProtoReflect.Descriptor instead.
func (*GetParams) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{13}
}

func (x *GetParams) GetMaxUrlsPerQueue() uint32 {
	if x != nil {
		return x.MaxUrlsPerQueue
	}
	return 0
}

func (x *GetParams) GetMaxQueues() uint32 {
	if x != nil {
		return x.MaxQueues
	}
	return 0
}

func (x *GetParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetParams) GetDelayRequestable() uint32 {
	if x != nil {
		return x.DelayRequestable
	}
	return 0
}

func (m *GetParams) GetItem() isGetParams_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *GetParams) GetAnyCrawlID() *AnyCrawlID {
	if x, ok := x.GetItem().(*GetParams_AnyCrawlID); ok {
		return x.AnyCrawlID
	}
	return nil
}

func (x *GetParams) GetCrawlID() string {
	if x, ok := x.GetItem().(*GetParams_CrawlID); ok {
		return x.CrawlID
	}
	return ""
}

type isGetParams_Item interface {
	isGetParams_Item()
}

type GetParams_AnyCrawlID struct {
	AnyCrawlID *AnyCrawlID `protobuf:"bytes,5,opt,name=anyCrawlID,proto3,oneof"`
}

type GetParams_CrawlID struct {
	CrawlID string `protobuf:"bytes,6,opt,name=crawlID,proto3,oneof"`
}

func (*GetParams_AnyCrawlID) isGetParams_Item() {}

func (*GetParams_CrawlID) isGetParams_Item() {}

type AnyCrawlID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AnyCrawlID) Reset() {
	*x = AnyCrawlID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnyCrawlID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyCrawlID) ProtoMessage() {}

func (x *AnyCrawlID) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyCrawlID.ProtoReflect.Descriptor instead.
func (*AnyCrawlID) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{14}
}

//* Wrapper for a KnownURLItem or DiscoveredURLItem *
type URLItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Item:
	//	*URLItem_Discovered
	//	*URLItem_Known
	Item isURLItem_Item `protobuf_oneof:"item"`
	//* Identifier specified by the client, if missing, the URL is returned *
	ID string `protobuf:"bytes,3,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *URLItem) Reset() {
	*x = URLItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLItem) ProtoMessage() {}

func (x *URLItem) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLItem.ProtoReflect.Descriptor instead.
func (*URLItem) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{15}
}

func (m *URLItem) GetItem() isURLItem_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *URLItem) GetDiscovered() *DiscoveredURLItem {
	if x, ok := x.GetItem().(*URLItem_Discovered); ok {
		return x.Discovered
	}
	return nil
}

func (x *URLItem) GetKnown() *KnownURLItem {
	if x, ok := x.GetItem().(*URLItem_Known); ok {
		return x.Known
	}
	return nil
}

func (x *URLItem) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type isURLItem_Item interface {
	isURLItem_Item()
}

type URLItem_Discovered struct {
	Discovered *DiscoveredURLItem `protobuf:"bytes,1,opt,name=discovered,proto3,oneof"`
}

type URLItem_Known struct {
	Known *KnownURLItem `protobuf:"bytes,2,opt,name=known,proto3,oneof"`
}

func (*URLItem_Discovered) isURLItem_Item() {}

func (*URLItem_Known) isURLItem_Item() {}

type AckMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* ID which had been specified by the client *
	ID     string            `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Status AckMessage_Status `protobuf:"varint,2,opt,name=status,proto3,enum=urlfrontier.AckMessage_Status" json:"status,omitempty"`
}

func (x *AckMessage) Reset() {
	*x = AckMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckMessage) ProtoMessage() {}

func (x *AckMessage) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckMessage.ProtoReflect.Descriptor instead.
func (*AckMessage) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{16}
}

func (x *AckMessage) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *AckMessage) GetStatus() AckMessage_Status {
	if x != nil {
		return x.Status
	}
	return AckMessage_OK
}

type URLInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* URL *
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	//* The key is used to put the URLs into queues, the value can be anything set by the client but would typically be the hostname,
	//domain name or IP or the URL. If not set, the service will use a sensible default like hostname.
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	//*
	//Arbitrary key / values stored alongside the URL. Can be anything needed by the crawler like http status, source URL etc...
	Metadata map[string]*StringList `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//* crawl ID *
	CrawlID string `protobuf:"bytes,4,opt,name=crawlID,proto3" json:"crawlID,omitempty"`
}

func (x *URLInfo) Reset() {
	*x = URLInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLInfo) ProtoMessage() {}

func (x *URLInfo) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLInfo.ProtoReflect.Descriptor instead.
func (*URLInfo) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{17}
}

func (x *URLInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *URLInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *URLInfo) GetMetadata() map[string]*StringList {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *URLInfo) GetCrawlID() string {
	if x != nil {
		return x.CrawlID
	}
	return ""
}

//*
//URL which was already known in the frontier, was returned by GetURLs() and processed by the crawler. Used for updating the information
//about it in the frontier. If the date is not set, the URL will be considered done and won't be resubmitted for fetching, otherwise
//it will be elligible for fetching after the delay has elapsed.
type KnownURLItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *URLInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	//* Expressed in seconds of UTC time since Unix epoch
	//1970-01-01T00:00:00Z. Optional, the default value of 0 indicates
	//that a URL should not be refetched.
	RefetchableFromDate uint64 `protobuf:"varint,2,opt,name=refetchable_from_date,json=refetchableFromDate,proto3" json:"refetchable_from_date,omitempty"`
}

func (x *KnownURLItem) Reset() {
	*x = KnownURLItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnownURLItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnownURLItem) ProtoMessage() {}

func (x *KnownURLItem) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnownURLItem.ProtoReflect.Descriptor instead.
func (*KnownURLItem) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{18}
}

func (x *KnownURLItem) GetInfo() *URLInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *KnownURLItem) GetRefetchableFromDate() uint64 {
	if x != nil {
		return x.RefetchableFromDate
	}
	return 0
}

//*
//URL discovered during the crawl, might already be known in the URL Frontier or not.
type DiscoveredURLItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *URLInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *DiscoveredURLItem) Reset() {
	*x = DiscoveredURLItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoveredURLItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveredURLItem) ProtoMessage() {}

func (x *DiscoveredURLItem) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveredURLItem.ProtoReflect.Descriptor instead.
func (*DiscoveredURLItem) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{19}
}

func (x *DiscoveredURLItem) GetInfo() *URLInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

//*
//Configuration of the log level for a particular package, e.g.
//crawlercommons.urlfrontier.service.rocksdb DEBUG
type LogLevelParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Package string               `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	Level   LogLevelParams_Level `protobuf:"varint,2,opt,name=level,proto3,enum=urlfrontier.LogLevelParams_Level" json:"level,omitempty"`
	// only for this instance
	Local bool `protobuf:"varint,3,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *LogLevelParams) Reset() {
	*x = LogLevelParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlfrontier_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogLevelParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogLevelParams) ProtoMessage() {}

func (x *LogLevelParams) ProtoReflect() protoreflect.Message {
	mi := &file_urlfrontier_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogLevelParams.ProtoReflect.Descriptor instead.
func (*LogLevelParams) Descriptor() ([]byte, []int) {
	return file_urlfrontier_proto_rawDescGZIP(), []int{20}
}

func (x *LogLevelParams) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *LogLevelParams) GetLevel() LogLevelParams_Level {
	if x != nil {
		return x.Level
	}
	return LogLevelParams_TRACE
}

func (x *LogLevelParams) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

var File_urlfrontier_proto protoreflect.FileDescriptor

var file_urlfrontier_proto_rawDesc = []byte{
	0x0a, 0x11, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72,
	0x22, 0xee, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x06,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75,
	0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x61, 0x77, 0x6c, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x61, 0x77, 0x6c, 0x49, 0x44, 0x1a, 0x39, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x91, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x6e, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x40, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x72, 0x61, 0x77, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x1d, 0x0a, 0x05, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x22,
	0x34, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x1f, 0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x1c, 0x0a, 0x04, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x7d, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x61,
	0x77, 0x6c, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x61, 0x77,
	0x6c, 0x49, 0x44, 0x22, 0x24, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x16, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x57, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x81, 0x01, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44,
	0x65, 0x6c, 0x61, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x11,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x61,
	0x77, 0x6c, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x61, 0x77,
	0x6c, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x68, 0x0a, 0x10, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x22, 0xf5, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x2b, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x5f, 0x70, 0x65,
	0x72, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6d,
	0x61, 0x78, 0x55, 0x72, 0x6c, 0x73, 0x50, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2b, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x61,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x61, 0x6e, 0x79, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x41,
	0x6e, 0x79, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x49, 0x44, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x6e, 0x79,
	0x43, 0x72, 0x61, 0x77, 0x6c, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x07, 0x63, 0x72, 0x61, 0x77, 0x6c,
	0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x72, 0x61, 0x77,
	0x6c, 0x49, 0x44, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x0c, 0x0a, 0x0a, 0x41,
	0x6e, 0x79, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x49, 0x44, 0x22, 0x96, 0x01, 0x0a, 0x07, 0x55, 0x52,
	0x4c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x40, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x72, 0x6c, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x64, 0x55, 0x52, 0x4c, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x69, 0x65, 0x72, 0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x55, 0x52, 0x4c, 0x49, 0x74, 0x65,
	0x6d, 0x48, 0x00, 0x52, 0x05, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x22, 0x7d, 0x0a, 0x0a, 0x41, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x41,
	0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x27, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x4b,
	0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x41, 0x49, 0x4c, 0x10,
	0x02, 0x22, 0xdd, 0x01, 0x0a, 0x07, 0x55, 0x52, 0x4c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x3e, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65,
	0x72, 0x2e, 0x55, 0x52, 0x4c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x49, 0x44, 0x1a, 0x54, 0x0a, 0x0d, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x6c, 0x0a, 0x0c, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x55, 0x52, 0x4c, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x55, 0x52,
	0x4c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x15, 0x72,
	0x65, 0x66, 0x65, 0x74, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x72, 0x65, 0x66, 0x65,
	0x74, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x22,
	0x3d, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x55, 0x52, 0x4c,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72,
	0x2e, 0x55, 0x52, 0x4c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xb7,
	0x01, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x75, 0x72, 0x6c,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x3c, 0x0a, 0x05, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x52, 0x41, 0x43, 0x45, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46,
	0x4f, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x41, 0x52, 0x4e, 0x10, 0x03, 0x12, 0x09, 0x0a,
	0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x32, 0xd5, 0x06, 0x0a, 0x0b, 0x55, 0x52, 0x4c,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x69, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x75, 0x72, 0x6c, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x61, 0x77,
	0x6c, 0x73, 0x12, 0x12, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x1a, 0x17, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x61, 0x77, 0x6c,
	0x12, 0x1f, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x11, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e,
	0x4c, 0x6f, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69,
	0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x16, 0x2e,
	0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x52,
	0x4c, 0x73, 0x12, 0x16, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x14, 0x2e, 0x75, 0x72, 0x6c,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x55, 0x52, 0x4c, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x3e, 0x0a, 0x07, 0x50, 0x75, 0x74, 0x55, 0x52, 0x4c, 0x73, 0x12,
	0x14, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x55, 0x52,
	0x4c, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x17, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x69, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00,
	0x28, 0x01, 0x30, 0x01, 0x12, 0x45, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x23, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x57, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x69, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0b, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x23, 0x2e, 0x75, 0x72, 0x6c,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x69, 0x6e, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x11, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x4c, 0x6f,
	0x6e, 0x67, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x1d, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x69, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x09,
	0x53, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x13, 0x2e, 0x75, 0x72, 0x6c, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x1a, 0x12,
	0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x12, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x1a, 0x14, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x69, 0x65, 0x72, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x22, 0x00, 0x12, 0x3f, 0x0a,
	0x08, 0x53, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x1d, 0x2e, 0x75, 0x72, 0x6c, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x65, 0x6c,
	0x61, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x40,
	0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x2e,
	0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x75, 0x72, 0x6c,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x42, 0x38, 0x0a, 0x1a, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x73, 0x2e, 0x75, 0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x5a, 0x1a,
	0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x75,
	0x72, 0x6c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_urlfrontier_proto_rawDescOnce sync.Once
	file_urlfrontier_proto_rawDescData = file_urlfrontier_proto_rawDesc
)

func file_urlfrontier_proto_rawDescGZIP() []byte {
	file_urlfrontier_proto_rawDescOnce.Do(func() {
		file_urlfrontier_proto_rawDescData = protoimpl.X.CompressGZIP(file_urlfrontier_proto_rawDescData)
	})
	return file_urlfrontier_proto_rawDescData
}

var file_urlfrontier_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_urlfrontier_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_urlfrontier_proto_goTypes = []interface{}{
	(AckMessage_Status)(0),         // 0: urlfrontier.AckMessage.Status
	(LogLevelParams_Level)(0),      // 1: urlfrontier.LogLevelParams.Level
	(*Stats)(nil),                  // 2: urlfrontier.Stats
	(*Pagination)(nil),             // 3: urlfrontier.Pagination
	(*DeleteCrawlMessage)(nil),     // 4: urlfrontier.DeleteCrawlMessage
	(*Empty)(nil),                  // 5: urlfrontier.Empty
	(*Local)(nil),                  // 6: urlfrontier.Local
	(*Active)(nil),                 // 7: urlfrontier.Active
	(*Boolean)(nil),                // 8: urlfrontier.Boolean
	(*Long)(nil),                   // 9: urlfrontier.Long
	(*QueueList)(nil),              // 10: urlfrontier.QueueList
	(*StringList)(nil),             // 11: urlfrontier.StringList
	(*QueueWithinCrawlParams)(nil), // 12: urlfrontier.QueueWithinCrawlParams
	(*QueueDelayParams)(nil),       // 13: urlfrontier.QueueDelayParams
	(*BlockQueueParams)(nil),       // 14: urlfrontier.BlockQueueParams
	(*GetParams)(nil),              // 15: urlfrontier.GetParams
	(*AnyCrawlID)(nil),             // 16: urlfrontier.AnyCrawlID
	(*URLItem)(nil),                // 17: urlfrontier.URLItem
	(*AckMessage)(nil),             // 18: urlfrontier.AckMessage
	(*URLInfo)(nil),                // 19: urlfrontier.URLInfo
	(*KnownURLItem)(nil),           // 20: urlfrontier.KnownURLItem
	(*DiscoveredURLItem)(nil),      // 21: urlfrontier.DiscoveredURLItem
	(*LogLevelParams)(nil),         // 22: urlfrontier.LogLevelParams
	nil,                            // 23: urlfrontier.Stats.CountsEntry
	nil,                            // 24: urlfrontier.URLInfo.MetadataEntry
}
var file_urlfrontier_proto_depIdxs = []int32{
	23, // 0: urlfrontier.Stats.counts:type_name -> urlfrontier.Stats.CountsEntry
	16, // 1: urlfrontier.GetParams.anyCrawlID:type_name -> urlfrontier.AnyCrawlID
	21, // 2: urlfrontier.URLItem.discovered:type_name -> urlfrontier.DiscoveredURLItem
	20, // 3: urlfrontier.URLItem.known:type_name -> urlfrontier.KnownURLItem
	0,  // 4: urlfrontier.AckMessage.status:type_name -> urlfrontier.AckMessage.Status
	24, // 5: urlfrontier.URLInfo.metadata:type_name -> urlfrontier.URLInfo.MetadataEntry
	19, // 6: urlfrontier.KnownURLItem.info:type_name -> urlfrontier.URLInfo
	19, // 7: urlfrontier.DiscoveredURLItem.info:type_name -> urlfrontier.URLInfo
	1,  // 8: urlfrontier.LogLevelParams.level:type_name -> urlfrontier.LogLevelParams.Level
	11, // 9: urlfrontier.URLInfo.MetadataEntry.value:type_name -> urlfrontier.StringList
	5,  // 10: urlfrontier.URLFrontier.ListNodes:input_type -> urlfrontier.Empty
	6,  // 11: urlfrontier.URLFrontier.ListCrawls:input_type -> urlfrontier.Local
	4,  // 12: urlfrontier.URLFrontier.DeleteCrawl:input_type -> urlfrontier.DeleteCrawlMessage
	3,  // 13: urlfrontier.URLFrontier.ListQueues:input_type -> urlfrontier.Pagination
	15, // 14: urlfrontier.URLFrontier.GetURLs:input_type -> urlfrontier.GetParams
	17, // 15: urlfrontier.URLFrontier.PutURLs:input_type -> urlfrontier.URLItem
	12, // 16: urlfrontier.URLFrontier.GetStats:input_type -> urlfrontier.QueueWithinCrawlParams
	12, // 17: urlfrontier.URLFrontier.DeleteQueue:input_type -> urlfrontier.QueueWithinCrawlParams
	14, // 18: urlfrontier.URLFrontier.BlockQueueUntil:input_type -> urlfrontier.BlockQueueParams
	7,  // 19: urlfrontier.URLFrontier.SetActive:input_type -> urlfrontier.Active
	6,  // 20: urlfrontier.URLFrontier.GetActive:input_type -> urlfrontier.Local
	13, // 21: urlfrontier.URLFrontier.SetDelay:input_type -> urlfrontier.QueueDelayParams
	22, // 22: urlfrontier.URLFrontier.SetLogLevel:input_type -> urlfrontier.LogLevelParams
	11, // 23: urlfrontier.URLFrontier.ListNodes:output_type -> urlfrontier.StringList
	11, // 24: urlfrontier.URLFrontier.ListCrawls:output_type -> urlfrontier.StringList
	9,  // 25: urlfrontier.URLFrontier.DeleteCrawl:output_type -> urlfrontier.Long
	10, // 26: urlfrontier.URLFrontier.ListQueues:output_type -> urlfrontier.QueueList
	19, // 27: urlfrontier.URLFrontier.GetURLs:output_type -> urlfrontier.URLInfo
	18, // 28: urlfrontier.URLFrontier.PutURLs:output_type -> urlfrontier.AckMessage
	2,  // 29: urlfrontier.URLFrontier.GetStats:output_type -> urlfrontier.Stats
	9,  // 30: urlfrontier.URLFrontier.DeleteQueue:output_type -> urlfrontier.Long
	5,  // 31: urlfrontier.URLFrontier.BlockQueueUntil:output_type -> urlfrontier.Empty
	5,  // 32: urlfrontier.URLFrontier.SetActive:output_type -> urlfrontier.Empty
	8,  // 33: urlfrontier.URLFrontier.GetActive:output_type -> urlfrontier.Boolean
	5,  // 34: urlfrontier.URLFrontier.SetDelay:output_type -> urlfrontier.Empty
	5,  // 35: urlfrontier.URLFrontier.SetLogLevel:output_type -> urlfrontier.Empty
	23, // [23:36] is the sub-list for method output_type
	10, // [10:23] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_urlfrontier_proto_init() }
func file_urlfrontier_proto_init() {
	if File_urlfrontier_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_urlfrontier_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlfrontier_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlfrontier_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCrawlMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlfrontier_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlfrontier_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Local); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlfrontier_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Active); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlfrontier_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Boolean); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlfrontier_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Long); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlfrontier_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlfrontier_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlfrontier_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueWithinCrawlParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlfrontier_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueDelayParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlfrontier_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockQueueParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlfrontier_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlfrontier_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnyCrawlID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlfrontier_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlfrontier_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlfrontier_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlfrontier_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KnownURLItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlfrontier_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoveredURLItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlfrontier_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogLevelParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_urlfrontier_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*GetParams_AnyCrawlID)(nil),
		(*GetParams_CrawlID)(nil),
	}
	file_urlfrontier_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*URLItem_Discovered)(nil),
		(*URLItem_Known)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_urlfrontier_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_urlfrontier_proto_goTypes,
		DependencyIndexes: file_urlfrontier_proto_depIdxs,
		EnumInfos:         file_urlfrontier_proto_enumTypes,
		MessageInfos:      file_urlfrontier_proto_msgTypes,
	}.Build()
	File_urlfrontier_proto = out.File
	file_urlfrontier_proto_rawDesc = nil
	file_urlfrontier_proto_goTypes = nil
	file_urlfrontier_proto_depIdxs = nil
}
